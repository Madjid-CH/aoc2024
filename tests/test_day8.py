from src.day8.day8 import (
    count_antinodes,
    parse_input,
    find_all_frequencies,
    antinodes_positions,
)

example = (
    "............\n"
    "........0...\n"
    ".....0......\n"
    ".......0....\n"
    "....0.......\n"
    "......A.....\n"
    "............\n"
    "............\n"
    "........A...\n"
    ".........A..\n"
    "............\n"
    "............"
)


def test_of_acceptance2():
    assert count_antinodes(example) == 34


def test_parse_input():
    assert parse_input(example) == [
        [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", "0", ".", ".", "."],
        [".", ".", ".", ".", ".", "0", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", "0", ".", ".", ".", "."],
        [".", ".", ".", ".", "0", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", "A", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", "A", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", ".", "A", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    ]


def test_find_all_frequencies():
    assert find_all_frequencies(parse_input(example)) == {
        "0": {(4, 4), (3, 7), (1, 8), (2, 5)},
        "A": {(8, 8), (5, 6), (9, 9)},
    }


def test_place_antinodes():
    grid = parse_input(example)
    frequencies = find_all_frequencies(grid)
    assert antinodes_positions(frequencies, grid) == {
        "0": {
            (0, 1),
            (0, 6),
            (0, 11),
            (1, 3),
            (1, 8),
            (2, 5),
            (2, 10),
            (3, 2),
            (3, 7),
            (4, 4),
            (4, 9),
            (5, 1),
            (5, 6),
            (5, 11),
            (6, 3),
            (7, 0),
            (7, 5),
            (8, 2),
            (9, 4),
            (10, 1),
            (11, 3),
        },
        "A": {
            (0, 0),
            (1, 1),
            (1, 3),
            (2, 2),
            (2, 4),
            (3, 3),
            (4, 4),
            (5, 5),
            (5, 6),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 10),
            (11, 11),
        },
    }


